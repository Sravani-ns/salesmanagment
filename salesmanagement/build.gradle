
plugins {
	id 'jacoco'
}
plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.sravani'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation:3.2.2'

	// Spring Security Dependency (Added)
	implementation 'org.springframework.boot:spring-boot-starter-security'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.6'

	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'io.lettuce:lettuce-core:6.3.2.RELEASE' // Compatible with Spring Boot 3.x

	implementation 'org.springframework.boot:spring-boot-starter-security' // Added for BCrypt


// Temporal dependencies
implementation 'io.temporal:temporal-sdk:1.24.1'
testImplementation 'io.temporal:temporal-testing:1.24.1'
implementation 'io.temporal:temporal-spring-boot-starter:1.24.1'

implementation("org.springframework.boot:spring-boot-starter-logging")// Optional

// PostgreSQL Driver (Spring Boot manages the version)
implementation 'org.postgresql:postgresql'

// Lombok for testing
testCompileOnly 'org.projectlombok:lombok'
testAnnotationProcessor 'org.projectlombok:lombok'
}


tasks.named('test') {
	useJUnitPlatform()



	testLogging {
		events "passed", "skipped", "failed"
		exceptionFormat "full"
		showStandardStreams = true
	}

	reports {
		html.required.set(true)
		junitXml.required.set(true)
	}

	// Summary in console
	afterSuite { desc, result ->
		if (!desc.parent) {
			println "\n==================== TEST SUMMARY ===================="
			println "✅ Total Tests : ${result.testCount}"
			println "🟢 Passed      : ${result.successfulTestCount}"
			println "🔴 Failed      : ${result.failedTestCount}"
			println "⚪ Skipped     : ${result.skippedTestCount}"
			println "⏱️  Duration   : ${result.endTime - result.startTime} ms"
			println "======================================================"
		}
	}
}


